# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Ride implements Node {
  id: ID!
  name: String!
  imgURL: String
  loc: String
  desc: String!
  height: Int!
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  pw: String!
}


#
# Other Types
#

type AggregateRide {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createRide(data: RideCreateInput!): Ride!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateRide(data: RideUpdateInput!, where: RideWhereUniqueInput!): Ride
  deleteUser(where: UserWhereUniqueInput!): User
  deleteRide(where: RideWhereUniqueInput!): Ride
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertRide(where: RideWhereUniqueInput!, create: RideCreateInput!, update: RideUpdateInput!): Ride!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  updateManyRides(data: RideUpdateInput!, where: RideWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
  deleteManyRides(where: RideWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  rides(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ride]!
  user(where: UserWhereUniqueInput!): User
  ride(where: RideWhereUniqueInput!): Ride
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  ridesConnection(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RideConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

"""
A connection to a list of items.
"""
type RideConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RideEdge]!
  aggregate: AggregateRide!
}

input RideCreateInput {
  name: String!
  imgURL: String
  loc: String
  desc: String!
  height: Int!
}

"""
An edge in a connection.
"""
type RideEdge {
  """
  The item at the end of the edge.
  """
  node: Ride!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum RideOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  imgURL_ASC
  imgURL_DESC
  loc_ASC
  loc_DESC
  desc_ASC
  desc_DESC
  height_ASC
  height_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type RidePreviousValues {
  id: ID!
  name: String!
  imgURL: String
  loc: String
  desc: String!
  height: Int!
}

type RideSubscriptionPayload {
  mutation: MutationType!
  node: Ride
  updatedFields: [String!]
  previousValues: RidePreviousValues
}

input RideSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RideSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RideSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: RideWhereInput
}

input RideUpdateInput {
  name: String
  imgURL: String
  loc: String
  desc: String
  height: Int
}

input RideWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RideWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RideWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  imgURL: String
  """
  All values that are not equal to given value.
  """
  imgURL_not: String
  """
  All values that are contained in given list.
  """
  imgURL_in: [String!]
  """
  All values that are not contained in given list.
  """
  imgURL_not_in: [String!]
  """
  All values less than the given value.
  """
  imgURL_lt: String
  """
  All values less than or equal the given value.
  """
  imgURL_lte: String
  """
  All values greater than the given value.
  """
  imgURL_gt: String
  """
  All values greater than or equal the given value.
  """
  imgURL_gte: String
  """
  All values containing the given string.
  """
  imgURL_contains: String
  """
  All values not containing the given string.
  """
  imgURL_not_contains: String
  """
  All values starting with the given string.
  """
  imgURL_starts_with: String
  """
  All values not starting with the given string.
  """
  imgURL_not_starts_with: String
  """
  All values ending with the given string.
  """
  imgURL_ends_with: String
  """
  All values not ending with the given string.
  """
  imgURL_not_ends_with: String
  loc: String
  """
  All values that are not equal to given value.
  """
  loc_not: String
  """
  All values that are contained in given list.
  """
  loc_in: [String!]
  """
  All values that are not contained in given list.
  """
  loc_not_in: [String!]
  """
  All values less than the given value.
  """
  loc_lt: String
  """
  All values less than or equal the given value.
  """
  loc_lte: String
  """
  All values greater than the given value.
  """
  loc_gt: String
  """
  All values greater than or equal the given value.
  """
  loc_gte: String
  """
  All values containing the given string.
  """
  loc_contains: String
  """
  All values not containing the given string.
  """
  loc_not_contains: String
  """
  All values starting with the given string.
  """
  loc_starts_with: String
  """
  All values not starting with the given string.
  """
  loc_not_starts_with: String
  """
  All values ending with the given string.
  """
  loc_ends_with: String
  """
  All values not ending with the given string.
  """
  loc_not_ends_with: String
  desc: String
  """
  All values that are not equal to given value.
  """
  desc_not: String
  """
  All values that are contained in given list.
  """
  desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  desc_not_in: [String!]
  """
  All values less than the given value.
  """
  desc_lt: String
  """
  All values less than or equal the given value.
  """
  desc_lte: String
  """
  All values greater than the given value.
  """
  desc_gt: String
  """
  All values greater than or equal the given value.
  """
  desc_gte: String
  """
  All values containing the given string.
  """
  desc_contains: String
  """
  All values not containing the given string.
  """
  desc_not_contains: String
  """
  All values starting with the given string.
  """
  desc_starts_with: String
  """
  All values not starting with the given string.
  """
  desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  desc_ends_with: String
  """
  All values not ending with the given string.
  """
  desc_not_ends_with: String
  height: Int
  """
  All values that are not equal to given value.
  """
  height_not: Int
  """
  All values that are contained in given list.
  """
  height_in: [Int!]
  """
  All values that are not contained in given list.
  """
  height_not_in: [Int!]
  """
  All values less than the given value.
  """
  height_lt: Int
  """
  All values less than or equal the given value.
  """
  height_lte: Int
  """
  All values greater than the given value.
  """
  height_gt: Int
  """
  All values greater than or equal the given value.
  """
  height_gte: Int
}

input RideWhereUniqueInput {
  id: ID
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  ride(where: RideSubscriptionWhereInput): RideSubscriptionPayload
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  pw: String!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  pw_ASC
  pw_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  pw: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  pw: String
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  pw: String
  """
  All values that are not equal to given value.
  """
  pw_not: String
  """
  All values that are contained in given list.
  """
  pw_in: [String!]
  """
  All values that are not contained in given list.
  """
  pw_not_in: [String!]
  """
  All values less than the given value.
  """
  pw_lt: String
  """
  All values less than or equal the given value.
  """
  pw_lte: String
  """
  All values greater than the given value.
  """
  pw_gt: String
  """
  All values greater than or equal the given value.
  """
  pw_gte: String
  """
  All values containing the given string.
  """
  pw_contains: String
  """
  All values not containing the given string.
  """
  pw_not_contains: String
  """
  All values starting with the given string.
  """
  pw_starts_with: String
  """
  All values not starting with the given string.
  """
  pw_not_starts_with: String
  """
  All values ending with the given string.
  """
  pw_ends_with: String
  """
  All values not ending with the given string.
  """
  pw_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
